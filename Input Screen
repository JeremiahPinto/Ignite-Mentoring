/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.File;
import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.AnchorPane;
import javafx.stage.FileChooser;
import javafx.stage.Stage;
import javafx.scene.control.*;
import javafx.scene.control.Alert.AlertType;
import javax.swing.JOptionPane;
 
public  class Ignite extends Application {
 
    @Override
    public void start(final Stage stage) {
        stage.setTitle("Ignite Mentoring");
 
         FileChooser fileChooser = new FileChooser();
         Button browseButton = new Button("Browse");
         Button startButton = new Button("Start");         
         Label Desc = new Label("Location of Excel File:");
         Label Warn = new Label("( Files must end in .xls or .xlsx )");
         TextField Direc = new TextField();
         
         Warn.getStyleClass().add("myWarnLabel");
         
        Direc.setOnAction((ActionEvent e) -> {
             if(Direc.getText()!= null && !"".equals(Direc.getText()))
                startButton.setDisable(false);
             else
                 JOptionPane.showMessageDialog(null,"Unable to access file");
        });
         
         startButton.setDisable(true);
         
         browseButton.setOnAction((ActionEvent e) -> {
             configureFileChooser(fileChooser);
             File file = fileChooser.showOpenDialog(stage);
             String temp = file.getAbsolutePath();
             if (file != null)
             {    
                 Direc.setText(temp);
                 startButton.setDisable(false);
             }
             else
                 JOptionPane.showMessageDialog(null,"Unable to access file");
        });
         
        
 
         startButton.setOnAction((ActionEvent e) -> {
            if(!Direc.getText().contains(".xls"))
            {
                startButton.setDisable(true);
                infoBox("Unable to access file", "ERROR!");
                Direc.setText("");
            }
            
         });
 
         AnchorPane inputAnchorPane = new AnchorPane();
 
        AnchorPane.setTopAnchor(Desc, 23.0);
        AnchorPane.setLeftAnchor(Desc, 17.0);
        AnchorPane.setRightAnchor(Desc, 230.0);
        AnchorPane.setBottomAnchor(Desc, 90.0);
        
        AnchorPane.setTopAnchor(Warn, 95.0);
        AnchorPane.setLeftAnchor(Warn, 45.0);
        //AnchorPane.setRightAnchor(Warn, 205.0);
        AnchorPane.setBottomAnchor(Warn, 22.0);
        
        //AnchorPane.setTopAnchor(Direc, 53.0);
        AnchorPane.setLeftAnchor(Direc, 17.0);
        AnchorPane.setRightAnchor(Direc, 15.0);
        AnchorPane.setBottomAnchor(Direc, 60.0);
        
        //AnchorPane.setTopAnchor(browseButton, 91.0);
        AnchorPane.setLeftAnchor(browseButton, 250.0);
        AnchorPane.setRightAnchor(browseButton, 97.0);
        AnchorPane.setBottomAnchor(browseButton, 20.0);
        
        //AnchorPane.setTopAnchor(startButton, 91.0);
        AnchorPane.setLeftAnchor(startButton, 333.0);
        AnchorPane.setRightAnchor(startButton, 15.0);
        AnchorPane.setBottomAnchor(startButton, 20.0);
        
        inputAnchorPane.getChildren().addAll(Desc, Warn, Direc, startButton, browseButton);
        
        Scene scene = new Scene(inputAnchorPane, 411, 128);
        scene.getStylesheets().add("Ign.css");
        
        stage.setScene(scene);
        stage.setResizable(false);
        stage.show();
    }
 
    public static void main(String[] args) {
        Application.launch(args);
    }
 
    private static void configureFileChooser(
         FileChooser fileChooser) {      
            //fileChooser.setTitle("File Explorer");
            fileChooser.setInitialDirectory(
                new File(System.getProperty("user.home"))
            );                 
            fileChooser.getExtensionFilters().add(
                //new FileChooser.ExtensionFilter("All Files", "*.*"),
                new FileChooser.ExtensionFilter("Excel", "*.xls*")
            );
    }
    
    public static void infoBox(String infoMessage, String titleBar)
    {
        /* By specifying a null headerMessage String, we cause the dialog to
           not have a header */
        infoBox(infoMessage, titleBar, null);
    }

    public static void infoBox(String infoMessage, String titleBar, String headerMessage)
    {
        Alert alert = new Alert(AlertType.INFORMATION);
        alert.setTitle(titleBar);
        alert.setHeaderText(headerMessage);
        alert.setContentText(infoMessage);
        alert.showAndWait();
    }
 
//    private void openFile(File file) {
//        try {
//            desktop.open(file);
//        } catch (IOException ex) {
//            Logger.getLogger(Ignite.class.getName()).log(
//                Level.SEVERE, null, ex
//            );
//        }
//    }
}
